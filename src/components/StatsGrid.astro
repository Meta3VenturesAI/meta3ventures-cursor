---
interface Stat {
  number: string;
  label: string;
  description?: string;
}

interface Props {
  stats: Stat[];
  columns?: number;
  showDescription?: boolean;
}

const { 
  stats, 
  columns = 4,
  showDescription = false
} = Astro.props as Props;
---

<div class={`stats-grid columns-${columns}`}>
  {stats.map(stat => (
    <div class="stat-item" key={stat.label}>
      <div class="stat-number">{stat.number}</div>
      <div class="stat-label">{stat.label}</div>
      {showDescription && stat.description && (
        <div class="stat-description">{stat.description}</div>
      )}
    </div>
  ))}
</div>

<style>
  .stats-grid {
    display: grid;
    gap: 1rem;
  }
  .columns-2 {
    grid-template-columns: repeat(2, 1fr);
  }
  .columns-3 {
    grid-template-columns: repeat(3, 1fr);
  }
  .columns-4 {
    grid-template-columns: repeat(4, 1fr);
  }
  .stat-item {
    padding: 1rem;
    border: 1px solid #ccc;
    border-radius: 0.375rem;
    text-align: center;
  }
  .stat-number {
    font-size: 2rem;
    font-weight: bold;
  }
  .stat-label {
    margin-top: 0.5rem;
    font-size: 1.25rem;
  }
  .stat-description {
    margin-top: 0.5rem;
    font-size: 1rem;
  }
</style>---
interface Stat {
  number: string;
  label: string;
  description?: string;
}

interface Props {
  stats: Stat[];
  columns?: number;
  showDescription?: boolean;
}

const { 
  stats, 
  columns = 4,
  showDescription = false
} = Astro.props;
---

<div class={`stats-grid columns-${columns}`}>
  {stats.map(stat => (
    <div class="stat-card">
      <div class="stat-number">{stat.number}</div>
      <div class="stat-label">{stat.label}</div>
      {showDescription && stat.description && (
        <p class="stat-description">{stat.description}</p>
      )}
    </div>
  ))}
</div>

<style>
  .stats-grid {
    display: grid;
    gap: 2rem;
  }

  .columns-2 {
    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
  }

  .columns-3 {
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  }

  .columns-4 {
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  }

  .stat-card {
    background: rgba(255, 255, 255, 0.05);
    padding: 2rem;
    border-radius: 12px;
    border: 1px solid rgba(255, 255, 255, 0.1);
    text-align: center;
    transition: all 0.3s ease;
  }

  .stat-card:hover {
    transform: translateY(-5px);
    border-color: rgba(99, 102, 241, 0.3);
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.2);
  }

  .stat-number {
    font-size: 3rem;
    font-weight: 700;
    color: #6366f1;
    margin-bottom: 0.5rem;
  }

  .stat-label {
    font-size: 1.2rem;
    color: white;
    margin-bottom: 1rem;
  }

  .stat-description {
    color: rgba(255, 255, 255, 0.7);
    font-size: 0.9rem;
    line-height: 1.6;
  }

  @media (max-width: 768px) {
    .stats-grid {
      grid-template-columns: 1fr;
    }
  }
</style>