---
interface BreadcrumbItem {
  text: string;
  href: string;
}

interface Props {
  items: readonly BreadcrumbItem[];
}

const { items } = Astro.props as Props;
---

<nav class="breadcrumbs" aria-label="Breadcrumb">
  <ol>
    {items.map((item, index) => (
      <li key={item.href}>
        <a href={item.href} aria-current={index === items.length - 1 ? 'page' : undefined}>
          {item.text}
        </a>
        {index < items.length - 1 && <span class="separator">/</span>}
      </li>
    ))}
  </ol>
</nav>

<style>
  .breadcrumbs {
    /* Add your styles here */
  }
  .separator {
    margin: 0 0.5rem;
  }
</style>---
interface Props {
  items: {
    text: string;
    href: string;
  }[];
}

const { items } = Astro.props;
---

<nav class="breadcrumbs" aria-label="Breadcrumb">
  <ol>
    {items.map((item, index) => (
      <li>
        <a href={item.href}>{item.text}</a>
        {index < items.length - 1 && <span>/</span>}
      </li>
    ))}
  </ol>
</nav>

<style>
  .breadcrumbs {
    padding: 1rem 2rem;
    background: rgba(255, 255, 255, 0.02);
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  }

  ol {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    gap: 0.5rem;
    align-items: center;
    max-width: 1400px;
    margin: 0 auto;
  }

  li {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  a {
    color: var(--text-muted);
    text-decoration: none;
    transition: color 0.3s ease;
  }

  a:hover {
    color: var(--text);
  }

  span {
    color: var(--text-muted);
  }

  @media (max-width: 768px) {
    .breadcrumbs {
      padding: 0.75rem 1rem;
      overflow-x: auto;
      -webkit-overflow-scrolling: touch;
    }
  }
</style>