---
interface Feature {
  icon: string;
  title: string;
  description: string;
  link?: string;
}

interface Props {
  features: Feature[];
  columns?: 2 | 3 | 4;
  showLink?: boolean;
  theme?: 'light' | 'dark';
}

const { 
  features,
  columns = 3,
  showLink = true,
  theme = 'dark'
} = Astro.props as Props;
---

<div class={`feature-grid theme-${theme} columns-${columns}`}>
  {features.map((feature) => (
    <div class="feature-item" key={feature.title}>
      <div class="feature-icon">
        <img src={feature.icon} alt={`${feature.title} icon`} />
      </div>
      <h3 class="feature-title">{feature.title}</h3>
      <p class="feature-description">{feature.description}</p>
      {showLink && feature.link && (
        <a href={feature.link} class="feature-link">Learn more</a>
      )}
    </div>
  ))}
</div>

<style>
  .feature-grid {
    display: grid;
    gap: 1rem;
  }
  .columns-2 {
    grid-template-columns: repeat(2, 1fr);
  }
  .columns-3 {
    grid-template-columns: repeat(3, 1fr);
  }
  .columns-4 {
    grid-template-columns: repeat(4, 1fr);
  }
  .theme-light {
    background-color: #fff;
    color: #000;
  }
  .theme-dark {
    background-color: #000;
    color: #fff;
  }
  .feature-item {
    padding: 1rem;
    border: 1px solid #ccc;
    border-radius: 8px;
    text-align: center;
  }
  .feature-icon img {
    width: 48px;
    height: 48px;
  }
  .feature-title {
    margin-top: 0.5rem;
    font-size: 1.25rem;
  }
  .feature-description {
    margin-top: 0.5rem;
    font-size: 1rem;
  }
  .feature-link {
    margin-top: 0.5rem;
    display: inline-block;
    color: #007bff;
    text-decoration: none;
  }
  .feature-link:hover {
    text-decoration: underline;
  }
</style>---
interface Feature {
  icon: string;
  title: string;
  description: string;
  link?: string;
}

interface Props {
  features: Feature[];
  columns?: 2 | 3 | 4;
  showLink?: boolean;
  theme?: 'light' | 'dark';
}

const { 
  features,
  columns = 3,
  showLink = true,
  theme = 'dark'
} = Astro.props;
---

<div class={`features-grid columns-${columns} theme-${theme}`}>
  {features.map(feature => (
    <div class="feature-card">
      <div class="feature-icon">{feature.icon}</div>
      <div class="feature-content">
        <h3>{feature.title}</h3>
        <p>{feature.description}</p>
        {showLink && feature.link && (
          <a href={feature.link} class="learn-more">Learn More â†’</a>
        )}
      </div>
    </div>
  ))}
</div>

<style>
  .features-grid {
    display: grid;
    gap: 2rem;
  }

  .columns-2 { grid-template-columns: repeat(auto-fit, minmax(400px, 1fr)); }
  .columns-3 { grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); }
  .columns-4 { grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); }

  .feature-card {
    background: rgba(255, 255, 255, 0.05);
    padding: 2rem;
    border-radius: 12px;
    border: 1px solid rgba(255, 255, 255, 0.1);
    transition: all 0.3s ease;
  }

  .feature-card:hover {
    transform: translateY(-5px);
    border-color: rgba(99, 102, 241, 0.3);
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.2);
  }

  .feature-icon {
    font-size: 2.5rem;
    margin-bottom: 1rem;
  }

  .feature-content h3 {
    color: white;
    font-size: 1.5rem;
    margin-bottom: 1rem;
  }

  .theme-light .feature-content h3 {
    color: #1f2937;
  }

  .feature-content p {
    color: rgba(255, 255, 255, 0.7);
    margin-bottom: 1.5rem;
    line-height: 1.6;
  }

  .theme-light .feature-content p {
    color: #4b5563;
  }

  .learn-more {
    color: #6366f1;
    text-decoration: none;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    font-weight: 500;
    transition: all 0.3s ease;
  }

  .learn-more:hover {
    gap: 0.75rem;
  }

  @media (max-width: 768px) {
    .features-grid {
      grid-template-columns: 1fr;
    }
  }
</style>