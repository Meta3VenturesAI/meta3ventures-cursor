---
interface Stat {
  number: string;
  label: string;
}

interface Props {
  stats: Stat[];
}

const { stats } = Astro.props;
---

<div class="hero-stats">
  {stats.map(stat => (
    <div class="stat-item">
      <div class="stat-number">{stat.number}</div>
      <div class="stat-label">{stat.label}</div>
    </div>
  ))}
</div>

<style>
  .hero-stats {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 2rem;
    margin-top: 4rem;
  }

  .stat-item {
    text-align: center;
    opacity: 0;
    transform: translateY(20px);
    animation: fadeInUp 0.6s ease forwards var(--delay, 0.6s);
  }

  .stat-number {
    font-size: 2.5rem;
    font-weight: 700;
    color: #6366f1;
    margin-bottom: 0.5rem;
  }

  .stat-label {
    color: rgba(255, 255, 255, 0.8);
    font-size: 1.1rem;
  }

  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @media (max-width: 768px) {
    .hero-stats {
      grid-template-columns: 1fr;
      gap: 1.5rem;
    }
  }
</style>