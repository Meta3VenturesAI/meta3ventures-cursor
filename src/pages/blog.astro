---
import Layout from '../layouts/Layout.astro';
import PageHero from '../components/PageHero.astro';
import LoadingSpinner from '../components/LoadingSpinner.astro';
import NewsletterCTA from '../components/NewsletterCTA.astro';
import { supabase, isSupabaseConfigured } from '../lib/supabase';

// Default blog posts if Supabase is not configured
const defaultPosts = [
  {
    title: "The Future of AI in Business",
    excerpt: "Exploring how AI is transforming business operations and decision-making.",
    slug: "future-of-ai-business",
    image: "https://images.unsplash.com/photo-1677442136019-21780ecad995",
    published_at: new Date().toISOString(),
    category: "AI"
  },
  {
    title: "Web3 Development Guide",
    excerpt: "A comprehensive guide to building decentralized applications.",
    slug: "web3-development-guide",
    image: "https://images.unsplash.com/photo-1639762681485-074b7f938ba0",
    published_at: new Date().toISOString(),
    category: "Web3"
  },
  {
    title: "Robotics Integration",
    excerpt: "Best practices for integrating robotics in your workflow.",
    slug: "robotics-integration",
    image: "https://images.unsplash.com/photo-1676401835893-ec90a38a286e",
    published_at: new Date().toISOString(),
    category: "Robotics"
  }
];

let posts = defaultPosts;
let categories = new Set(defaultPosts.map(post => post.category));

if (isSupabaseConfigured()) {
  try {
    const { data } = await supabase!
      .from('blog_posts')
      .select('*')
      .eq('is_published', true)
      .order('created_at', { ascending: false });
    
    if (data && data.length > 0) {
      posts = data;
      data.forEach(post => {
        if (post.category) {
          categories.add(post.category);
        }
      });
    }
  } catch (e) {
    console.error('Error fetching posts:', e);
  }
}
---

<Layout title="Blog - Meta3Ventures">
  <PageHero
    title="Latest Insights"
    subtitle="Stay updated with our latest thoughts on AI, Web3, and emerging technologies"
    background="https://images.unsplash.com/photo-1677442136019-21780ecad995"
    pattern="grid"
    height="50vh"
  />

  <section class="blog-section">
    <div class="content-container">
      <div class="filters-container">
        <div class="search-box">
          <input 
            type="search" 
            id="search" 
            placeholder="Search articles..." 
          >
          <svg class="search-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
            <circle cx="11" cy="11" r="8"/>
            <line x1="21" y1="21" x2="16.65" y2="16.65"/>
          </svg>
        </div>

        <div class="categories-filter">
          <button class="category-btn active" data-category="all">All</button>
          {[...categories].map(cat => (
            <button class="category-btn" data-category={cat}>{cat}</button>
          ))}
        </div>
      </div>

      {posts.map(post => (
        <article class="post-card">
          <a href={`/blog/${post.slug}`} class="post-link">
            <div class="post-image" style={`background-image: url(${post.image})`}>
              {post.category && (
                <span class="category-tag">{post.category}</span>
              )}
            </div>
            <div class="post-content">
              <h2>{post.title}</h2>
              <p class="excerpt">{post.excerpt}</p>
              <div class="post-meta">
                <time datetime={post.published_at}>
                  {new Date(post.published_at).toLocaleDateString()}
                </time>
                <span class="read-more">Read More â†’</span>
              </div>
            </div>
          </a>
        </article>
      ))}
    </div>
  </section>

  <NewsletterCTA
    title="Stay Ahead of the Curve"
    subtitle="Subscribe to our newsletter for exclusive insights on AI, Web3, and emerging technologies"
    buttonText="Join Our Community"
    pattern="waves"
  />
</Layout>

<style>
  .content-container {
    max-width: 1400px;
    margin: 0 auto;
    padding: 4rem 2rem;
  }

  .filters-container {
    margin-bottom: 3rem;
  }

  .search-box {
    position: relative;
    max-width: 500px;
    margin: 0 auto 2rem;
  }

  .search-box input {
    width: 100%;
    padding: 1rem 3rem 1rem 1.5rem;
    border: 2px solid rgba(99, 102, 241, 0.2);
    border-radius: 12px;
    background: rgba(255, 255, 255, 0.05);
    color: white;
    font-size: 1.1rem;
    transition: all 0.3s ease;
  }

  .search-box input:focus {
    outline: none;
    border-color: #6366f1;
    box-shadow: 0 0 0 4px rgba(99, 102, 241, 0.2);
  }

  .search-icon {
    position: absolute;
    right: 1rem;
    top: 50%;
    transform: translateY(-50%);
    width: 20px;
    height: 20px;
    stroke: rgba(255, 255, 255, 0.6);
    stroke-width: 2;
  }

  .categories-filter {
    display: flex;
    flex-wrap: wrap;
    gap: 0.75rem;
    justify-content: center;
  }

  .category-btn {
    padding: 0.5rem 1.25rem;
    border: none;
    border-radius: 20px;
    background: rgba(99, 102, 241, 0.1);
    color: rgba(255, 255, 255, 0.8);
    font-size: 0.9rem;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .category-btn:hover,
  .category-btn.active {
    background: #6366f1;
    color: white;
    transform: translateY(-2px);
  }

  .post-card {
    background: rgba(255, 255, 255, 0.05);
    border-radius: 16px;
    overflow: hidden;
    transition: all 0.3s ease;
    border: 1px solid rgba(99, 102, 241, 0.1);
    margin-bottom: 2rem;
  }

  .post-card:hover {
    transform: translateY(-5px);
    border-color: rgba(99, 102, 241, 0.3);
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.2);
  }

  .post-link {
    text-decoration: none;
    color: white;
  }

  .post-image {
    height: 200px;
    background-size: cover;
    background-position: center;
    position: relative;
  }

  .category-tag {
    position: absolute;
    top: 1rem;
    left: 1rem;
    padding: 0.5rem 1rem;
    background: rgba(99, 102, 241, 0.9);
    color: white;
    border-radius: 20px;
    font-size: 0.8rem;
    backdrop-filter: blur(5px);
  }

  .post-content {
    padding: 1.5rem;
  }

  .post-content h2 {
    font-size: 1.5rem;
    margin: 0 0 1rem;
    color: white;
    line-height: 1.3;
  }

  .excerpt {
    color: rgba(255, 255, 255, 0.7);
    margin: 0;
    line-height: 1.6;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .post-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 1.5rem;
    padding-top: 1rem;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
    color: rgba(255, 255, 255, 0.6);
    font-size: 0.9rem;
  }

  .read-more {
    color: #6366f1;
    font-weight: 500;
  }

  @media (max-width: 768px) {
    .content-container {
      padding: 2rem 1rem;
    }
  }
</style>

<script>
// Category filtering
const categoryBtns = document.querySelectorAll('.category-btn');
const posts = document.querySelectorAll('.post-card');

categoryBtns.forEach(btn => {
  btn.addEventListener('click', () => {
    const category = btn.dataset.category;
    
    // Update active state
    categoryBtns.forEach(b => b.classList.remove('active'));
    btn.classList.add('active');
    
    // Filter posts
    posts.forEach(post => {
      const postCategory = post.querySelector('.category-tag')?.textContent;
      if (category === 'all' || postCategory === category) {
        post.style.display = 'block';
      } else {
        post.style.display = 'none';
      }
    });
  });
});

// Search functionality
const searchInput = document.querySelector('.search-box input');
searchInput?.addEventListener('input', (e) => {
  const searchTerm = (e.target as HTMLInputElement).value.toLowerCase();
  
  posts.forEach(post => {
    const title = post.querySelector('h2')?.textContent?.toLowerCase() || '';
    const excerpt = post.querySelector('.excerpt')?.textContent?.toLowerCase() || '';
    
    if (title.includes(searchTerm) || excerpt.includes(searchTerm)) {
      post.style.display = 'block';
    } else {
      post.style.display = 'none';
    }
  });
});
</script>